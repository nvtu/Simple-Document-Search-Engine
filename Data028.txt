Computer games have steadily become a form of mainstream entertainment ever since Pong was released back in 1958. Today, it is hard to find an electronics department in any store that doesn't carry some sort of computer game. "Big deal," you say, "Everyone knows about computer games. What does they have to do with physics?" Well, the technology for creating more powerful software is constantly advancing, and since games are a form of software, they too become more and more advanced. As games become more advanced, game developers aim to create games that offer a more realistic experience. The technology has advanced to such a stage that making the games look real is no problem, but making a truly immersive experience is something different. That's where physics comes in. 

Well, to answer that, you have to have a basic understanding of physics. Physics is the study of matter and energy, and how the two interact with each other. Things such as gravity, sound and light - all involve physics. As you might have noticed, gravity, sound and light are things we encounter quite frequently in our day to day routines. Game developers, in their goal to create a believable, realistic world for the gamer to immerse themselves in, know that in order to do so their game needs to incorporate the laws of physics. After all, their games wouldn't be very realistic if players kept floating away every time they tried to make their character jump or dodge around. 

Gravity is only a small part of the realism experience. Developers have to incorporate as many laws of physics as they can in order to make their game truly realistic. Collisions play a big part in any game - it wouldn't be very believeable to allow players to move through walls or objects. Some games take the collision and elasticity elements further, and create extremely elaborate physics engines that can handle, say, two cars colliding, and produce a believeable outcome to the collision. Games like F1 Championship Racing and GTA3 have excellent physics engines that feature some really impressive automobile simulations. Many old games simply use gravity and collision detection in their games, but more recent games involve much more complicated physics applications. 

So How Do They Do It? 

Game developers use physics engines to simulate the physics effects in their games. What's a physics engine? A physics engine is a specialized piece of software specifically designed to integrate the laws of physics into a game. A physics engine deals solely with the physics aspects of the game, and has nothing to do with the actual gameplay. This is quite handy for developers, since once they have a good physics engine, they can use it for many of their games; for example, the same physics engine may be used for both a racing simulation and an action shooter. 

Many game developers are using mainstream physics engines licenced to a different company. This is handy, since it allows the developers to focus on creating a fun and exciting game, rather than having to divide their programmers between creating the game and creating the physics engine. One of the most prominent physics engines used today is Havok Game Dynamics SDK. 

Physics engines are extremely complicated. Each engine features aspects of just about every application of real-world physics that we see every day. An engine has to recognize where objects are in the world, and what forces can interact with them and where they can or cannot fall/get pushed/get blown into. Gravity has to be simulated realistically, with objects steadily accelerating as they fall towards the ground. More advanced physics engines will simulate different types of matter as well. A bouncing rubber ball has to interact differently when thrown than a fragile china vase (and in most new games, the vase can shatter into tiny pieces that interact with the environment separately). Fluid dynamics are becoming more and more realistic in games. A billowing cape or the ripples in a pool of water are all part of a physics engine. 

So What Can I Expect in Games to Come? 

Like I mentioned before, as the technology for creating games advances, the amount of things a person can do in the game will increase, and the game will look and feel much more realistic. Game developers are aiming to create the most visually pleasing games they can, and physics interactions are a big part of that. In the September 2002 issue of PCGamer, a critical look is given into Ion Storm's current project, DX2: Invisible War, sequel to the best-selling hit Deus Ex. Steve Powers, the game's designer, puts an emphasis on how realistic physics will enhance the gameplay of the stealth-shooter game. "Our physics processes allow us to simulate the environment and give the player consistent rules, and possible tools, that let the player create solutions to problems. Solutions are the products his own ingenuity, not the designers' intention." (PCGamer, 42) Powers goes on to describe a situation in which the player can bounce some barrels down the stairs to distract a guard (whom is knocked down by a second bouncing barrel) for an easy getaway. The gameplay options that are opened by a more realistic physics engine are limitless (DX2: Invisible War is using a slightly modified version of the Havok engine). 

The key difference that gamers will notice in the games of the future will be that most games will be incredibly realistic in terms of how the game world around them works. Aside from that, gamers will also experience a level of interaction in games that far exceed any they've seen before. Many games use small objects (such as cups, chairs, garbage cans, etc.) that are immovable or useless and only serve as eye candy. In future games, players will be able to do anything with those objects that they could do with them in real life.
